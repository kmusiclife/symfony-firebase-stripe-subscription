{% extends 'base.html.twig' %}

{% block title %}{% endblock %}

{% block body %}
<div id="firebaseui-auth-container"></div>
<div id="loader">Loading...</div>
<script>

    if (!firebase.apps.length) {
        firebase.initializeApp(firebaseConfig);
    }
    var ui = new firebaseui.auth.AuthUI(firebase.auth());
    var uiConfig = {
        callbacks: {
            signInSuccessWithAuthResult: function(authResult, redirectUrl) {
                authResult.user.getIdToken().then(function(idToken){ 
                    return idToken;
                }).then(idToken => {
                    fetch("{{ url('verify') }}", { 'headers': { idToken: idToken, csrf: "{{ csrf_token( csrf_id ) }}" } })
                        .then( response => { 
                            if( response.status == 200 ) {
                                return response.json();
                            } else {
                                location.href = "{{ url('signin') }}";
                            }
                        })
                        .then( json => {
                            if(json.redirect_url) {
                                location.href = json.redirect_url;
                            } else location.href = "{{ url('index') }}"; 
                        } )

                });
            },
            uiShown: function() {
                document.getElementById('loader').style.display = 'none';
            }
        },
        // Will use popup for IDP Providers sign-in flow instead of the default, redirect.
        signInFlow: 'redirect',
        signInOptions: [
            // Leave the lines as is for the providers you want to offer your users.
            firebase.auth.EmailAuthProvider.PROVIDER_ID,
            /*
            firebase.auth.GoogleAuthProvider.PROVIDER_ID,
            firebase.auth.FacebookAuthProvider.PROVIDER_ID,
            firebase.auth.TwitterAuthProvider.PROVIDER_ID,
            firebase.auth.GithubAuthProvider.PROVIDER_ID,
            firebase.auth.PhoneAuthProvider.PROVIDER_ID
            */
        ],
        tosUrl: "{{ url('page_tos') }}",
        privacyPolicyUrl: "{{ url('page_privacy') }}"
    };
    ui.start('#firebaseui-auth-container', uiConfig);

</script>
{% endblock %}
